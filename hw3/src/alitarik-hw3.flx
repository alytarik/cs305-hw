%{
#include "alitarik-hw3.h"
#include "alitarik-hw3.tab.h"

int line_counter = 1;
int count_newline(char* str) {
    int count = 0;
    int i;
    for (i = 0; str[i] != '\0'; i++)
        if (str[i] == '\n')
            count++;
    return count;
}
%}
%%


["]Get["]		return tGET;
["]Set["]		return tSET;
["]Function["]		return tFUNCTION;
["]Print["]		return tPRINT;
["]If["]		return tIF;
["]Return["]		return tRETURN;

["]"+"["]       {yylval.linenum = line_counter; return tADD;}
["]"-"["]       {yylval.linenum = line_counter; return tSUB;}
["]"*"["]       {yylval.linenum = line_counter; return tMUL;}
["]"/"["]       {yylval.linenum = line_counter; return tDIV;}
["]"++"["]		{yylval.linenum = line_counter; return tINC;}
["]">"["]		{yylval.linenum = line_counter; return tGT;}
["]"=="["]		{yylval.linenum = line_counter; return tEQUALITY;}
["]"--"["]		{yylval.linenum = line_counter; return tDEC;}
["]"<"["]		{yylval.linenum = line_counter; return tLT;}
["]"<="["]		{yylval.linenum = line_counter; return tLEQ;}
["]">="["]		{yylval.linenum = line_counter; return tGEQ;}


["][_a-zA-Z][a-zA-Z0-9_]*["]	return tIDENT;
				
['][^']*['] {
    char *result = (char *)malloc(strlen(yytext));
    strcpy(result,yytext);
    result++;
    *(result+strlen(result)-1) = '\0';
    yylval.val.s = result;
    line_counter+=count_newline(yytext);
    return tSTRING;
};


[0-9]+ |
-[0-9]+ {
    yylval.val.i = atoi(yytext);
    return tNUM;
};


[0-9]+"."[0-9]+	|
-[0-9]+"."[0-9]+ {
    yylval.val.r = atof(yytext);
    return tREAL;
};
\n line_counter++;
[ \t\r]+ 
.			return yytext[0];

%%
